"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[504],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(t),f=o,y=l["".concat(s,".").concat(f)]||l[f]||d[f]||a;return t?r.createElement(y,c(c({ref:n},u),{},{components:t})):r.createElement(y,c({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=l;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},1102:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return d}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),c=["components"],i={id:"react-store",title:"react-store",sidebar_position:1},s=void 0,p={unversionedId:"react/react-store",id:"react/react-store",title:"react-store",description:"",source:"@site/docs/react/store.md",sourceDirName:"react",slug:"/react/react-store",permalink:"/web-note/docs/react/react-store",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react/store.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"react-store",title:"react-store",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"home",permalink:"/web-note/docs/home"}},u={},d=[],l={toc:d};function f(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="store.js"',title:'"store.js"'},"import React, {\n  Reducer, useCallback, useContext, useReducer,\n} from 'react';\n\nexport interface IModel<S> {\n  namespace: string;\n  state: LoadingState<S>;\n  effects: IStringMap<(action: IAction, put: (action: IAction) => void) => void>;\n  reducers: IStringMap<Reducer<LoadingState<S>, IAction>>;\n}\n\nexport interface ILoading {\n  loading?: IStringMap<boolean>\n}\n\ntype LoadingState<S> = S & ILoading;\n\nconst DispatchMap = new Map<string, IDispatch>();\n\nexport function storeFactory<S>({\n  effects, reducers, state, namespace,\n}: IModel<S>) {\n  function useStore(): [LoadingState<S>, IDispatch] {\n    const dispatchFn = useCallback(async (action: IAction) => {\n      const handler = effects[action.type];\n      if (handler) {\n        try {\n          put({\n            type: 'setLoading',\n            payload: {\n              [action.type]: true,\n            },\n          });\n          await handler(action, put);\n        } finally {\n          put({\n            type: 'setLoading',\n            payload: {\n              [action.type]: false,\n            },\n          });\n        }\n      } else {\n        put(action);\n      }\n    }, []);\n    DispatchMap.set(namespace, dispatchFn);\n    const dispatch = useCallback((action: IAction) => {\n      const { type } = action;\n      if (type.includes('/')) {\n        const [ns, actionType] = type.split('/');\n        const fn = DispatchMap.get(ns);\n        if (fn) {\n          const newAction = { ...action, type: actionType };\n          fn(newAction);\n        }\n      } else {\n        dispatchFn(action);\n      }\n    }, [dispatchFn]);\n    const reducerFn = useCallback((prevState: LoadingState<S>, action: IAction) => {\n      const reducer = reducers[action.type];\n      if (reducer) {\n        return reducer(prevState, action);\n      } if (action.type === 'setLoading') {\n        const { loading } = prevState;\n        const { payload } = action;\n        const newObj = { ...(loading || {}), ...payload };\n        return { ...prevState, loading: newObj };\n      }\n      return prevState;\n    }, []);\n    const [model, put] = useReducer(reducerFn, state);\n\n    return [\n      model,\n      dispatch,\n    ];\n  }\n\n  return useStore;\n}\n\ntype ModelContextType<S> = [\n  LoadingState<S> | undefined,\n  IDispatch,\n];\n\ninterface IUseConnect<S> {\n  (mapFn?: IConnectMapFn<S>)\n  : [S, IDispatch]\n}\n\nexport function connectFactory<S>()\n: [React.Context<ModelContextType<S>>, IUseConnect<LoadingState<S>>] {\n  const context = React.createContext<ModelContextType<S>>([undefined, (action: IAction) => new Promise(() => {})]);\n\n  const useConnect: IUseConnect<LoadingState<S>> = (mapFn) => {\n    const [model, dispatch] = useContext(context);\n    return [mapFn?.(model!) ?? model!, dispatch];\n  };\n\n  return [context, useConnect];\n}\n")))}f.isMDXComponent=!0}}]);